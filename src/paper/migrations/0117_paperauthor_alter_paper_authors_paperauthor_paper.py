# Generated by Django 4.1 on 2023-10-25 19:38

from django.db import migrations, models
import django.db.models.deletion


def migrate_paper_authors(apps, schema_editor):
    Paper = apps.get_model('paper', 'Paper')
    PaperAuthor = apps.get_model('paper', 'PaperAuthor')

    for paper_author in Paper.authors.through.objects.iterator():
        PaperAuthor.objects.create(
            paper=paper_author.paper,
            author=paper_author.author
        )


class Migration(migrations.Migration):

    dependencies = [
        ("user", "0097_remove_user_linkedin_data_author_linkedin_data"),
        ("paper", "0116_paper_automated_bounty_created"),
    ]

    operations = [
        migrations.CreateModel(
            name="PaperAuthor",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("updated_date", models.DateTimeField(auto_now=True)),
                ("ordinal", models.IntegerField(default=1)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="user.author"
                    ),
                ),
                (
                    "paper",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="paper.paper"
                    ),
                )
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.RunPython(migrate_paper_authors),
        migrations.RemoveField(
            model_name='paper',
            name='authors',
        ),
        migrations.AddField(
            model_name="paper",
            name="authors",
            field=models.ManyToManyField(
                blank=True,
                help_text="Author that participated in the research paper",
                related_name="authored_papers",
                through="paper.PaperAuthor",
                to="user.author",
            ),
        ),
    ]
